def decode(data):
    if len(data) == 0:
        return []

    if data[1] == 1:
        return [data[0]]+ decode(data[2:])

    if data[1] > 1:
        return [data[0]] * int(data[1]) + decode(data[2:])

    return list(s)


# Розвязок без рекурсії:

# def decode(data):
#     s = ""
#     for i in range(0, len(data), 2):
#         s += data[i] * int(data[i + 1])
#
#     return list(s)


if __name__ == "__main__":
    print(decode(["X", 3, "Z", 2, "X", 2, "Y", 3, "Z", 2]))



# Розберемо просту техніку кодування та декодування на основі серій.
# Наприклад, у нас є список із повторюваними спостереженнями якоїсь величини, вона може приймати значення X, Y або Z.
# Значення з'являються у довільному порядку та зберігаємо ми їх у списку
# ["X", "X", "X", "Z", "Z", "X", "X", "Y", "Y", "Y", "Z", "Z"] або рядку "XXXZZXXYYYZZ".
#
# Внаслідок чого ми можемо зменшити обсяг інформації, що зберігається? Стиснення можна досягти заміною групи
# повторюваних значень на одноразове значення та лічильник повторів: ["X", 3, "Z", 2, "X", 2, "Y", 3, "Z", 2]
#
# Напишіть рекурсивну функцію decode для декодування списку, закодованого цим способом.
# Як аргумент функція приймає закодований список. Функція має повернути розшифрований список елементів.